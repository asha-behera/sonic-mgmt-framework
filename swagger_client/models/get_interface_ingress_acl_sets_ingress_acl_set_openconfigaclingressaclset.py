# coding: utf-8

"""
    Sonic NMS

    Network management Open APIs for Broadcom's Sonic.  # noqa: E501

    OpenAPI spec version: 1.0.0
    Contact: mohammed.faraaz@broadcom.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from swagger_client.models.acl_openconfigaclacl_interfaces_ingressaclsets_config import AclOpenconfigaclaclInterfacesIngressaclsetsConfig  # noqa: F401,E501
from swagger_client.models.get_acl_openconfigaclacl_interfaces_ingressaclsets_aclentries import GetAclOpenconfigaclaclInterfacesIngressaclsetsAclentries  # noqa: F401,E501


class GetInterfaceIngressAclSetsIngressAclSetOpenconfigaclingressaclset(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'config': 'AclOpenconfigaclaclInterfacesIngressaclsetsConfig',
        'state': 'AclOpenconfigaclaclInterfacesIngressaclsetsConfig',
        'acl_entries': 'GetAclOpenconfigaclaclInterfacesIngressaclsetsAclentries'
    }

    attribute_map = {
        'config': 'config',
        'state': 'state',
        'acl_entries': 'acl-entries'
    }

    def __init__(self, config=None, state=None, acl_entries=None):  # noqa: E501
        """GetInterfaceIngressAclSetsIngressAclSetOpenconfigaclingressaclset - a model defined in Swagger"""  # noqa: E501

        self._config = None
        self._state = None
        self._acl_entries = None
        self.discriminator = None

        if config is not None:
            self.config = config
        if state is not None:
            self.state = state
        if acl_entries is not None:
            self.acl_entries = acl_entries

    @property
    def config(self):
        """Gets the config of this GetInterfaceIngressAclSetsIngressAclSetOpenconfigaclingressaclset.  # noqa: E501


        :return: The config of this GetInterfaceIngressAclSetsIngressAclSetOpenconfigaclingressaclset.  # noqa: E501
        :rtype: AclOpenconfigaclaclInterfacesIngressaclsetsConfig
        """
        return self._config

    @config.setter
    def config(self, config):
        """Sets the config of this GetInterfaceIngressAclSetsIngressAclSetOpenconfigaclingressaclset.


        :param config: The config of this GetInterfaceIngressAclSetsIngressAclSetOpenconfigaclingressaclset.  # noqa: E501
        :type: AclOpenconfigaclaclInterfacesIngressaclsetsConfig
        """

        self._config = config

    @property
    def state(self):
        """Gets the state of this GetInterfaceIngressAclSetsIngressAclSetOpenconfigaclingressaclset.  # noqa: E501


        :return: The state of this GetInterfaceIngressAclSetsIngressAclSetOpenconfigaclingressaclset.  # noqa: E501
        :rtype: AclOpenconfigaclaclInterfacesIngressaclsetsConfig
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this GetInterfaceIngressAclSetsIngressAclSetOpenconfigaclingressaclset.


        :param state: The state of this GetInterfaceIngressAclSetsIngressAclSetOpenconfigaclingressaclset.  # noqa: E501
        :type: AclOpenconfigaclaclInterfacesIngressaclsetsConfig
        """

        self._state = state

    @property
    def acl_entries(self):
        """Gets the acl_entries of this GetInterfaceIngressAclSetsIngressAclSetOpenconfigaclingressaclset.  # noqa: E501


        :return: The acl_entries of this GetInterfaceIngressAclSetsIngressAclSetOpenconfigaclingressaclset.  # noqa: E501
        :rtype: GetAclOpenconfigaclaclInterfacesIngressaclsetsAclentries
        """
        return self._acl_entries

    @acl_entries.setter
    def acl_entries(self, acl_entries):
        """Sets the acl_entries of this GetInterfaceIngressAclSetsIngressAclSetOpenconfigaclingressaclset.


        :param acl_entries: The acl_entries of this GetInterfaceIngressAclSetsIngressAclSetOpenconfigaclingressaclset.  # noqa: E501
        :type: GetAclOpenconfigaclaclInterfacesIngressaclsetsAclentries
        """

        self._acl_entries = acl_entries

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GetInterfaceIngressAclSetsIngressAclSetOpenconfigaclingressaclset, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetInterfaceIngressAclSetsIngressAclSetOpenconfigaclingressaclset):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
