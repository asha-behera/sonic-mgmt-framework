# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class AclOpenconfigaclaclAclsetsAclentriesActionsConfig(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, forwarding_action: str=None, log_action: str=None):  # noqa: E501
        """AclOpenconfigaclaclAclsetsAclentriesActionsConfig - a model defined in Swagger

        :param forwarding_action: The forwarding_action of this AclOpenconfigaclaclAclsetsAclentriesActionsConfig.  # noqa: E501
        :type forwarding_action: str
        :param log_action: The log_action of this AclOpenconfigaclaclAclsetsAclentriesActionsConfig.  # noqa: E501
        :type log_action: str
        """
        self.swagger_types = {
            'forwarding_action': str,
            'log_action': str
        }

        self.attribute_map = {
            'forwarding_action': 'forwarding-action',
            'log_action': 'log-action'
        }

        self._forwarding_action = forwarding_action
        self._log_action = log_action

    @classmethod
    def from_dict(cls, dikt) -> 'AclOpenconfigaclaclAclsetsAclentriesActionsConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The acl_openconfigaclacl_aclsets_aclentries_actions_config of this AclOpenconfigaclaclAclsetsAclentriesActionsConfig.  # noqa: E501
        :rtype: AclOpenconfigaclaclAclsetsAclentriesActionsConfig
        """
        return util.deserialize_model(dikt, cls)

    @property
    def forwarding_action(self) -> str:
        """Gets the forwarding_action of this AclOpenconfigaclaclAclsetsAclentriesActionsConfig.


        :return: The forwarding_action of this AclOpenconfigaclaclAclsetsAclentriesActionsConfig.
        :rtype: str
        """
        return self._forwarding_action

    @forwarding_action.setter
    def forwarding_action(self, forwarding_action: str):
        """Sets the forwarding_action of this AclOpenconfigaclaclAclsetsAclentriesActionsConfig.


        :param forwarding_action: The forwarding_action of this AclOpenconfigaclaclAclsetsAclentriesActionsConfig.
        :type forwarding_action: str
        """

        self._forwarding_action = forwarding_action

    @property
    def log_action(self) -> str:
        """Gets the log_action of this AclOpenconfigaclaclAclsetsAclentriesActionsConfig.


        :return: The log_action of this AclOpenconfigaclaclAclsetsAclentriesActionsConfig.
        :rtype: str
        """
        return self._log_action

    @log_action.setter
    def log_action(self, log_action: str):
        """Sets the log_action of this AclOpenconfigaclaclAclsetsAclentriesActionsConfig.


        :param log_action: The log_action of this AclOpenconfigaclaclAclsetsAclentriesActionsConfig.
        :type log_action: str
        """

        self._log_action = log_action
