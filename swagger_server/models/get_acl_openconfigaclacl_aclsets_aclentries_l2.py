# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.acl_openconfigaclacl_aclsets_aclentries_l2_config import AclOpenconfigaclaclAclsetsAclentriesL2Config  # noqa: F401,E501
from swagger_server import util


class GetAclOpenconfigaclaclAclsetsAclentriesL2(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, config: AclOpenconfigaclaclAclsetsAclentriesL2Config=None, state: AclOpenconfigaclaclAclsetsAclentriesL2Config=None):  # noqa: E501
        """GetAclOpenconfigaclaclAclsetsAclentriesL2 - a model defined in Swagger

        :param config: The config of this GetAclOpenconfigaclaclAclsetsAclentriesL2.  # noqa: E501
        :type config: AclOpenconfigaclaclAclsetsAclentriesL2Config
        :param state: The state of this GetAclOpenconfigaclaclAclsetsAclentriesL2.  # noqa: E501
        :type state: AclOpenconfigaclaclAclsetsAclentriesL2Config
        """
        self.swagger_types = {
            'config': AclOpenconfigaclaclAclsetsAclentriesL2Config,
            'state': AclOpenconfigaclaclAclsetsAclentriesL2Config
        }

        self.attribute_map = {
            'config': 'config',
            'state': 'state'
        }

        self._config = config
        self._state = state

    @classmethod
    def from_dict(cls, dikt) -> 'GetAclOpenconfigaclaclAclsetsAclentriesL2':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The get_acl_openconfigaclacl_aclsets_aclentries_l2 of this GetAclOpenconfigaclaclAclsetsAclentriesL2.  # noqa: E501
        :rtype: GetAclOpenconfigaclaclAclsetsAclentriesL2
        """
        return util.deserialize_model(dikt, cls)

    @property
    def config(self) -> AclOpenconfigaclaclAclsetsAclentriesL2Config:
        """Gets the config of this GetAclOpenconfigaclaclAclsetsAclentriesL2.


        :return: The config of this GetAclOpenconfigaclaclAclsetsAclentriesL2.
        :rtype: AclOpenconfigaclaclAclsetsAclentriesL2Config
        """
        return self._config

    @config.setter
    def config(self, config: AclOpenconfigaclaclAclsetsAclentriesL2Config):
        """Sets the config of this GetAclOpenconfigaclaclAclsetsAclentriesL2.


        :param config: The config of this GetAclOpenconfigaclaclAclsetsAclentriesL2.
        :type config: AclOpenconfigaclaclAclsetsAclentriesL2Config
        """

        self._config = config

    @property
    def state(self) -> AclOpenconfigaclaclAclsetsAclentriesL2Config:
        """Gets the state of this GetAclOpenconfigaclaclAclsetsAclentriesL2.


        :return: The state of this GetAclOpenconfigaclaclAclsetsAclentriesL2.
        :rtype: AclOpenconfigaclaclAclsetsAclentriesL2Config
        """
        return self._state

    @state.setter
    def state(self, state: AclOpenconfigaclaclAclsetsAclentriesL2Config):
        """Sets the state of this GetAclOpenconfigaclaclAclsetsAclentriesL2.


        :param state: The state of this GetAclOpenconfigaclaclAclsetsAclentriesL2.
        :type state: AclOpenconfigaclaclAclsetsAclentriesL2Config
        """

        self._state = state
