# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class AclOpenconfigaclaclAclsetsAclentriesInputinterfaceInterfacerefConfig(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, interface: str=None, subinterface: int=None):  # noqa: E501
        """AclOpenconfigaclaclAclsetsAclentriesInputinterfaceInterfacerefConfig - a model defined in Swagger

        :param interface: The interface of this AclOpenconfigaclaclAclsetsAclentriesInputinterfaceInterfacerefConfig.  # noqa: E501
        :type interface: str
        :param subinterface: The subinterface of this AclOpenconfigaclaclAclsetsAclentriesInputinterfaceInterfacerefConfig.  # noqa: E501
        :type subinterface: int
        """
        self.swagger_types = {
            'interface': str,
            'subinterface': int
        }

        self.attribute_map = {
            'interface': 'interface',
            'subinterface': 'subinterface'
        }

        self._interface = interface
        self._subinterface = subinterface

    @classmethod
    def from_dict(cls, dikt) -> 'AclOpenconfigaclaclAclsetsAclentriesInputinterfaceInterfacerefConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The acl_openconfigaclacl_aclsets_aclentries_inputinterface_interfaceref_config of this AclOpenconfigaclaclAclsetsAclentriesInputinterfaceInterfacerefConfig.  # noqa: E501
        :rtype: AclOpenconfigaclaclAclsetsAclentriesInputinterfaceInterfacerefConfig
        """
        return util.deserialize_model(dikt, cls)

    @property
    def interface(self) -> str:
        """Gets the interface of this AclOpenconfigaclaclAclsetsAclentriesInputinterfaceInterfacerefConfig.


        :return: The interface of this AclOpenconfigaclaclAclsetsAclentriesInputinterfaceInterfacerefConfig.
        :rtype: str
        """
        return self._interface

    @interface.setter
    def interface(self, interface: str):
        """Sets the interface of this AclOpenconfigaclaclAclsetsAclentriesInputinterfaceInterfacerefConfig.


        :param interface: The interface of this AclOpenconfigaclaclAclsetsAclentriesInputinterfaceInterfacerefConfig.
        :type interface: str
        """

        self._interface = interface

    @property
    def subinterface(self) -> int:
        """Gets the subinterface of this AclOpenconfigaclaclAclsetsAclentriesInputinterfaceInterfacerefConfig.


        :return: The subinterface of this AclOpenconfigaclaclAclsetsAclentriesInputinterfaceInterfacerefConfig.
        :rtype: int
        """
        return self._subinterface

    @subinterface.setter
    def subinterface(self, subinterface: int):
        """Sets the subinterface of this AclOpenconfigaclaclAclsetsAclentriesInputinterfaceInterfacerefConfig.


        :param subinterface: The subinterface of this AclOpenconfigaclaclAclsetsAclentriesInputinterfaceInterfacerefConfig.
        :type subinterface: int
        """

        self._subinterface = subinterface
