# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.config_ethertype import ConfigEthertype  # noqa: F401,E501
from swagger_server import util


class PutConfigEthertype(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, ethertype: str=None):  # noqa: E501
        """PutConfigEthertype - a model defined in Swagger

        :param ethertype: The ethertype of this PutConfigEthertype.  # noqa: E501
        :type ethertype: str
        """
        self.swagger_types = {
            'ethertype': str
        }

        self.attribute_map = {
            'ethertype': 'ethertype'
        }

        self._ethertype = ethertype

    @classmethod
    def from_dict(cls, dikt) -> 'PutConfigEthertype':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The put_config_ethertype of this PutConfigEthertype.  # noqa: E501
        :rtype: PutConfigEthertype
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ethertype(self) -> str:
        """Gets the ethertype of this PutConfigEthertype.


        :return: The ethertype of this PutConfigEthertype.
        :rtype: str
        """
        return self._ethertype

    @ethertype.setter
    def ethertype(self, ethertype: str):
        """Sets the ethertype of this PutConfigEthertype.


        :param ethertype: The ethertype of this PutConfigEthertype.
        :type ethertype: str
        """

        self._ethertype = ethertype
