# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.acl_openconfigaclacl_interfaces_ingressaclsets_config import AclOpenconfigaclaclInterfacesIngressaclsetsConfig  # noqa: F401,E501
from swagger_server.models.get_acl_openconfigaclacl_interfaces_ingressaclsets_aclentries import GetAclOpenconfigaclaclInterfacesIngressaclsetsAclentries  # noqa: F401,E501
from swagger_server import util


class GetAclOpenconfigaclaclInterfacesIngressaclsetsIngressaclset(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, set_name: str=None, type: str=None, config: AclOpenconfigaclaclInterfacesIngressaclsetsConfig=None, state: AclOpenconfigaclaclInterfacesIngressaclsetsConfig=None, acl_entries: GetAclOpenconfigaclaclInterfacesIngressaclsetsAclentries=None):  # noqa: E501
        """GetAclOpenconfigaclaclInterfacesIngressaclsetsIngressaclset - a model defined in Swagger

        :param set_name: The set_name of this GetAclOpenconfigaclaclInterfacesIngressaclsetsIngressaclset.  # noqa: E501
        :type set_name: str
        :param type: The type of this GetAclOpenconfigaclaclInterfacesIngressaclsetsIngressaclset.  # noqa: E501
        :type type: str
        :param config: The config of this GetAclOpenconfigaclaclInterfacesIngressaclsetsIngressaclset.  # noqa: E501
        :type config: AclOpenconfigaclaclInterfacesIngressaclsetsConfig
        :param state: The state of this GetAclOpenconfigaclaclInterfacesIngressaclsetsIngressaclset.  # noqa: E501
        :type state: AclOpenconfigaclaclInterfacesIngressaclsetsConfig
        :param acl_entries: The acl_entries of this GetAclOpenconfigaclaclInterfacesIngressaclsetsIngressaclset.  # noqa: E501
        :type acl_entries: GetAclOpenconfigaclaclInterfacesIngressaclsetsAclentries
        """
        self.swagger_types = {
            'set_name': str,
            'type': str,
            'config': AclOpenconfigaclaclInterfacesIngressaclsetsConfig,
            'state': AclOpenconfigaclaclInterfacesIngressaclsetsConfig,
            'acl_entries': GetAclOpenconfigaclaclInterfacesIngressaclsetsAclentries
        }

        self.attribute_map = {
            'set_name': 'set-name',
            'type': 'type',
            'config': 'config',
            'state': 'state',
            'acl_entries': 'acl-entries'
        }

        self._set_name = set_name
        self._type = type
        self._config = config
        self._state = state
        self._acl_entries = acl_entries

    @classmethod
    def from_dict(cls, dikt) -> 'GetAclOpenconfigaclaclInterfacesIngressaclsetsIngressaclset':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The get_acl_openconfigaclacl_interfaces_ingressaclsets_ingressaclset of this GetAclOpenconfigaclaclInterfacesIngressaclsetsIngressaclset.  # noqa: E501
        :rtype: GetAclOpenconfigaclaclInterfacesIngressaclsetsIngressaclset
        """
        return util.deserialize_model(dikt, cls)

    @property
    def set_name(self) -> str:
        """Gets the set_name of this GetAclOpenconfigaclaclInterfacesIngressaclsetsIngressaclset.


        :return: The set_name of this GetAclOpenconfigaclaclInterfacesIngressaclsetsIngressaclset.
        :rtype: str
        """
        return self._set_name

    @set_name.setter
    def set_name(self, set_name: str):
        """Sets the set_name of this GetAclOpenconfigaclaclInterfacesIngressaclsetsIngressaclset.


        :param set_name: The set_name of this GetAclOpenconfigaclaclInterfacesIngressaclsetsIngressaclset.
        :type set_name: str
        """
        if set_name is None:
            raise ValueError("Invalid value for `set_name`, must not be `None`")  # noqa: E501

        self._set_name = set_name

    @property
    def type(self) -> str:
        """Gets the type of this GetAclOpenconfigaclaclInterfacesIngressaclsetsIngressaclset.


        :return: The type of this GetAclOpenconfigaclaclInterfacesIngressaclsetsIngressaclset.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this GetAclOpenconfigaclaclInterfacesIngressaclsetsIngressaclset.


        :param type: The type of this GetAclOpenconfigaclaclInterfacesIngressaclsetsIngressaclset.
        :type type: str
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")  # noqa: E501

        self._type = type

    @property
    def config(self) -> AclOpenconfigaclaclInterfacesIngressaclsetsConfig:
        """Gets the config of this GetAclOpenconfigaclaclInterfacesIngressaclsetsIngressaclset.


        :return: The config of this GetAclOpenconfigaclaclInterfacesIngressaclsetsIngressaclset.
        :rtype: AclOpenconfigaclaclInterfacesIngressaclsetsConfig
        """
        return self._config

    @config.setter
    def config(self, config: AclOpenconfigaclaclInterfacesIngressaclsetsConfig):
        """Sets the config of this GetAclOpenconfigaclaclInterfacesIngressaclsetsIngressaclset.


        :param config: The config of this GetAclOpenconfigaclaclInterfacesIngressaclsetsIngressaclset.
        :type config: AclOpenconfigaclaclInterfacesIngressaclsetsConfig
        """

        self._config = config

    @property
    def state(self) -> AclOpenconfigaclaclInterfacesIngressaclsetsConfig:
        """Gets the state of this GetAclOpenconfigaclaclInterfacesIngressaclsetsIngressaclset.


        :return: The state of this GetAclOpenconfigaclaclInterfacesIngressaclsetsIngressaclset.
        :rtype: AclOpenconfigaclaclInterfacesIngressaclsetsConfig
        """
        return self._state

    @state.setter
    def state(self, state: AclOpenconfigaclaclInterfacesIngressaclsetsConfig):
        """Sets the state of this GetAclOpenconfigaclaclInterfacesIngressaclsetsIngressaclset.


        :param state: The state of this GetAclOpenconfigaclaclInterfacesIngressaclsetsIngressaclset.
        :type state: AclOpenconfigaclaclInterfacesIngressaclsetsConfig
        """

        self._state = state

    @property
    def acl_entries(self) -> GetAclOpenconfigaclaclInterfacesIngressaclsetsAclentries:
        """Gets the acl_entries of this GetAclOpenconfigaclaclInterfacesIngressaclsetsIngressaclset.


        :return: The acl_entries of this GetAclOpenconfigaclaclInterfacesIngressaclsetsIngressaclset.
        :rtype: GetAclOpenconfigaclaclInterfacesIngressaclsetsAclentries
        """
        return self._acl_entries

    @acl_entries.setter
    def acl_entries(self, acl_entries: GetAclOpenconfigaclaclInterfacesIngressaclsetsAclentries):
        """Sets the acl_entries of this GetAclOpenconfigaclaclInterfacesIngressaclsetsIngressaclset.


        :param acl_entries: The acl_entries of this GetAclOpenconfigaclaclInterfacesIngressaclsetsIngressaclset.
        :type acl_entries: GetAclOpenconfigaclaclInterfacesIngressaclsetsAclentries
        """

        self._acl_entries = acl_entries
