module sonic-vlan {
	namespace "http://github.com/Azure/sonic-vlan";
	prefix svlan;
	yang-version 1.1;

	import ietf-yang-types {
		prefix yang;
	}

	import sonic-common {
		prefix scommon;
	}

	import sonic-port {
		prefix prt;
	}

	import sonic-portchannel {
		prefix spc;
	}

	organization
		"BRCM";

	contact
		"BRCM";

	description
		"SONIC VLAN";

	revision 2019-05-15 {
		description
			"Initial revision.";
	}


	container sonic-vlan {

		list VLAN { 
			scommon:db-name "CONFIG_DB";
			key "name";
			scommon:key-delim "|";
			scommon:key-pattern "VLAN|{name}";

			must "./name = concat('Vlan', string(./vlanid))"{
				error-app-tag vlan-invalid;
			}
			/* must "./name = concat('Vlan', string(./vlanid)) and count(/prt:sonic-port/prt:PORT) > 0";//Temporary workaround */
			leaf name {
				type string {
					pattern "Vlan(409[0-5]|40[0-8][0-9]|[1-3][0-9]{3}|[1-9][0-9]{2}|[1-9][0-9]|[1-9])";
				}
			}

			leaf vlanid {
				mandatory true;
				type uint16;
			}

			leaf-list members {
				/*must "count(../members[text()=/spc:sonic-portchannel/" + 
					"spc:PORTCHANNEL_MEMBER[spc:ifname=current()]/spc:name]) = 0" {  
					error-message "A vlan interface member cannot be part of portchannel which is already a vlan member";
				}

				type union {*/
					type leafref {
						path "/prt:sonic-port/prt:PORT/prt:ifname";
					}
					/*type leafref {
						path "/spc:sonic-portchannel/spc:PORTCHANNEL/spc:name";
					}
				}*/
			}
		}

		list VLAN_MEMBER { 
			key "name ifname";
			scommon:key-delim "|";
			scommon:key-pattern "VLAN_MEMBER|{name}|{ifname}";

			/* must "count(../VLAN) > 0 and count(/prt:sonic-port/prt:PORT) > 0"; //Temporary workaround */

			leaf name {
				type leafref {
					path "../../VLAN/name";
				}
			}

			leaf ifname {
				type leafref {
					path "/prt:sonic-port/prt:PORT/prt:ifname";
				}
			}

			leaf tagging_mode {
				type scommon:tagging_mode;
				default tagged;
			}
		}

	}

}
